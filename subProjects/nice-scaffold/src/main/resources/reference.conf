app {
     httpServer {
        port = 8088
        host = "0.0.0.0"

      }

      tcpServer {
            port = 9000
            host = "0.0.0.0"
            // productionMode 为 true 表示工作在生产环境, 为 false 表示工作在开发环境
            productionMode = false

            tcpOptions {
                "acceptBacklog" = 1
            }
      }

      Verticles{
            GameServerVerticle{
                workerMode = true
                instance = 5
            }
            GatewayVerticle{
                 workerMode = false
                 instance = 5
            }
      }

      vertx {
            clustered = false

            options {
                  workerPoolSize = 16
                  preferNativeTransport = true
            }

            zookeeper {
                  // zookeeper 主机， 多个主机配置方式, 例如： "zooServer_1:2181,zooServer_2:2181,zooServer_3:2181"
                  zookeeperHosts = "localhost:2181"
                  sessionTimeout = 20000
                  connectTimeout = 3000
                  rootPath = "io.vertx"
                  retry {
                    initialSleepTime = 100
                    intervalTimes = 10000
                    maxTimes = 5
                  }
            }

            circuitBreaker {
                    name = "circuit-breaker"
                    maxFailures = 5
                    timeout = 10000
                    resetTimeout = 30000
                    fallbackOnFailure = true
            }
      }

      cache {

            // 默认配置一个名称为 local_redis 的redis 缓存, 默认连接本机上的 redis server
            configs {
                  // 配置项的 key 为缓存名称, 缓存名称不能重复
                  local_redis {
                        // 缓存实现对应的工厂类,
                        factory = "kt.scaffold.redis.cache.RedisCacheFactory"
                        // 缓存参数, 根据实现类的不同, 参数也不同
                        // redis 缓存参数配置请参考:
                        // 参考1: https://vertx.io/docs/vertx-redis-client/kotlin/#_connecting_to_redis
                        // 参考2: https://vertx.io/docs/apidocs/io/vertx/redis/client/RedisOptions.html
                        // 参考3: package io.vertx.redis.client 下的 RedisOptionsConverter.java
                        options {
                          // endpoint 格式说明: redis://[:password@]host[:port][/db-number]
                          endpoints = ["redis://localhost:6379/0"]
                        }
                  }

                  heap_cache {
                        factory = "kt.scaffold.cache.local.LocalCacheFactory"
                        options {
                          maximumSize = 2048
                        }
                  }
            }

      }
}

redis {
      // 配置项的 key 为 redis 配置名称
      // redis 配置名称不能重复
      redis_name {
                // 缓存参数, 根据实现类的不同, 参数也不同
                // redis 缓存参数配置请参考:
                // 参考1: https://vertx.io/docs/vertx-redis-client/kotlin/#_connecting_to_redis
                // 参考2: https://vertx.io/docs/apidocs/io/vertx/redis/client/RedisOptions.html
                // 参考3: package io.vertx.redis.client 下的 RedisOptionsConverter.java
                options {
                          // endpoint 格式说明: redis://[:password@]host[:port][/db-number]
                          endpoints = ["redis://zhj666@60.1.1.22:6379/0"]
                }
      }
}
mongo{
    mongo_name{
              // Single Cluster Settings
              "host" : "127.0.0.1", // string
              "port" : 27017,      // int

              // Multiple Cluster Settings
              "hosts" : [
                {
                  "host" : "cluster1", // string
                  "port" : 27000       // int
                },
                {
                  "host" : "cluster2", // string
                  "port" : 28000       // int
                },
                ...
              ],
              "replicaSet" :  "foo",    // string
              "serverSelectionTimeoutMS" : 30000, // long

              // Connection Pool Settings
              "maxPoolSize" : 50,                // int
              "minPoolSize" : 25,                // int
              "maxIdleTimeMS" : 300000,          // long
              "maxLifeTimeMS" : 3600000,         // long
              "waitQueueTimeoutMS" : 10000,      // long
              "maintenanceFrequencyMS" : 2000,   // long
              "maintenanceInitialDelayMS" : 500, // long

              // Credentials / Auth
              "username"   : "john",     // string
              "password"   : "passw0rd", // string
              "authSource" : "some.db"   // string
              // Auth mechanism
              "authMechanism"     : "GSSAPI",        // string
              "gssapiServiceName" : "myservicename", // string

              // Socket Settings
              "connectTimeoutMS" : 300000, // int
              "socketTimeoutMS"  : 100000, // int
              "sendBufferSize"    : 8192,  // int
              "receiveBufferSize" : 8192,  // int

              // Server Settings
              "heartbeatFrequencyMS"    : 1000, // long
              "minHeartbeatFrequencyMS" :  500, // long

              // SSL Settings
              "ssl" : false,                       // boolean
              "sslInvalidHostNameAllowed" : false, // boolean
              "trustAll" : false,                  // boolean
              "keyPath" : "key.pem",               // string
              "certPath" : "cert.pem",             // string
              "caPath" : "ca.pem"                  // string
    }
}